To run the mongo docker image
sudo docker run -d -p 2717:27017 -v ~/mongodb-docker:/data/db --name mymongo mongo:latest

If contatiner is not able to start again
sudo docker rm mymongo
Run it again

To open the mongo shell
sudo docker exec -it mymongo mongosh

To always restart the container on boot up.
Make sure the docker is in enabled state by running >sudo systemctl enable docker 
sudo docker update --restart=always mymongo

-----------------

Current Implementation for game party: 
User can invite only his firends to the game party.
Future work: User can choose to invite friends for private sessions or open the invitation to the public for more social interaction.
This can be achieved by providing settings that allow users to switch between modes depending on their preference for each game party.

When player is online but not in any game party, player status: "idle" else "in-game".

Create a user-login endpoint. This will update the status to "idle".
Whenver a user logs-in, broadcast a real time message to all his friends with his online status

----------------------
For protocol buffers

1. apt install -y protobuf-compiler
// protoc --version

// copy protoc file to /usr/local/go/bin/
2. sudo cp /usr/bin/protoc /usr/local/go/bin/


3. get below packages: 
    a. go get google.golang.org/protobuf
    b. go get google.golang.org/protobuf/proto
    c. go get google.golang.org/grpc

3. Install the below packages. Will be installed in $GoBIN -> defaulting to $GOPATH/bin = ~/go/bin
    i. go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28
    ii. go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2

// add the above path
4. export PATH="$PATH:$(go env GOPATH)/bin"

5. generate go code for the proto file
    protoc --go_out=. --go-grpc_out=. ./game.proto

-----------

Future Work For MongoDB, 
1. user better practice to store and retrieve password
2. create indexes on fields that are read frequently
3. For gameparty collection, create a Cron job to move all records having game party status as 'over' and time since created greater than 1 month to a backup collection 'gamepartyover' for faster mongo read operations on 'getparty' collection 

-----------------
Real time services
1. notify the user whenever a player joins the party
    - 1st invoke the gRPC call "StreamPlayerJoinedStatus" from Postman
    - Then, join the game party

2. notify the user whenever his friend comes online

ToDo: have multiple instances

-----------

Things installed for the project
docker
golang
protoc (gRPC)

------

// build the docker image
sudo docker build -t mycode:1.0 .

// To run the docker container from given image 
sudo docker run --network host -d --name myserver mycode:1.0 

// currently the connection to ports is not  happening w/o --network as host
// figure out solution for it like creating a new network, etch